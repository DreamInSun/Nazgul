<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cyan.svc.nazgulexample.mappers.PersonMapper">
    <!--auto generated Code-->
    <resultMap id="BaseResultMap" type="cyan.svc.nazgulexample.entities.Person">
        <result column="pid" property="pid" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="id" property="id" jdbcType="INTEGER"/>
        <result column="ts_create" property="tsCreate" jdbcType="TIMESTAMP"/>
        <result column="ts_update" property="tsUpdate" jdbcType="TIMESTAMP"/>
        <result column="age" property="age"/>
        <result column="gender" property="gender"/>
        <result column="first_name" property="firstName"/>
        <result column="last_name" property="lastName"/>
    </resultMap>

    <!--auto generated Code-->
    <sql id="Base_Column_List">
        pid,
        name,
        id,
        ts_create,
        ts_update,
        age,
        gender,
        first_name,
        last_name
    </sql>

    <!--auto generated Code-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="person.id">
        INSERT INTO naz_person (
            pid,
            name,
            id,
            ts_create,
            ts_update,
            age,
            gender,
            first_name,
            last_name
        ) VALUES (
            #{person.pid},
            #{person.name},
            #{person.id},
            #{person.tsCreate},
            #{person.tsUpdate},
            #{person.age},
            #{person.gender},
            #{person.firstName},
            #{person.lastName}
        )
	</insert>

    <!--auto generated Code-->
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="person.id">
        INSERT INTO naz_person
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="person.pid!=null"> pid,</if>
            <if test="person.name!=null"> name,</if>
            <if test="person.id!=null"> id,</if>
            <if test="person.tsCreate!=null"> ts_create,</if>
            <if test="person.tsUpdate!=null"> ts_update,</if>
            <if test="person.age!=null"> age,</if>
            <if test="person.gender!=null"> gender,</if>
            <if test="person.firstName!=null"> first_name,</if>
            <if test="person.lastName!=null"> last_name</if>
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="person.pid!=null"> #{person.pid},</if>
            <if test="person.name!=null"> #{person.name},</if>
            <if test="person.id!=null"> #{person.id},</if>
            <if test="person.tsCreate!=null"> #{person.tsCreate},</if>
            <if test="person.tsUpdate!=null"> #{person.tsUpdate},</if>
            <if test="person.age!=null"> #{person.age},</if>
            <if test="person.gender!=null"> #{person.gender},</if>
            <if test="person.firstName!=null"> #{person.firstName},</if>
            <if test="person.lastName!=null"> #{person.lastName}</if>
        </trim>
	</insert>

    <!--auto generated Code-->
    <insert id="insertList">        INSERT INTO naz_person(
        <include refid="Base_Column_List"/>
        )VALUES
        <foreach collection="persons" item="person" index="index" separator=",">
            (
            #{person.pid},
            #{person.name},
            #{person.id},
            #{person.tsCreate},
            #{person.tsUpdate},
            #{person.age},
            #{person.gender},
            #{person.firstName},
            #{person.lastName}
            )
        </foreach>
	</insert>

    <!--auto generated Code-->
    <update id="update">
        UPDATE naz_person
        <set>
            <if test="person.pid != null"> pid = #{person.pid},</if>
            <if test="person.name != null"> name = #{person.name},</if>
            <if test="person.id != null"> id = #{person.id},</if>
            <if test="person.tsCreate != null"> ts_create = #{person.tsCreate},</if>
            <if test="person.tsUpdate != null"> ts_update = #{person.tsUpdate},</if>
            <if test="person.age != null"> age = #{person.age},</if>
            <if test="person.gender != null"> gender = #{person.gender},</if>
            <if test="person.firstName != null"> first_name = #{person.firstName},</if>
            <if test="person.lastName != null"> last_name = #{person.lastName}</if>
        </set>
		WHERE id = #{person.id,jdbcType=INTEGER}
    </update>

    <!--auto generated by codehelper on 2017-12-27 12:09:13-->
    <select id="findOneByPid" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from naz_person
        where pid=#{pid,jdbcType=INTEGER}
    </select>

    <!--auto generated by codehelper on 2017-12-27 12:09:42-->
    <select id="findOneById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from naz_person
        where id=#{id,jdbcType=INTEGER}
    </select>
</mapper>

