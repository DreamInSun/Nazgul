<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!--========== Parent ==========-->
    <parent>
        <artifactId>Nazgul</artifactId>
        <groupId>cyan.svc</groupId>
        <version>0.3.6</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <!--========== Module ==========-->
    <artifactId>Nazgul-core</artifactId>
    <version>0.3.6-SNAPSHOT</version>

    <!--======================================================-->
    <!--==================== Dependencies ====================-->
    <!--======================================================-->
    <dependencies>
        <!--========== Drop Wizard ==========-->
        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-core</artifactId>
            <version>${dropwizard.version}</version>
        </dependency>
        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-assets</artifactId>
            <version>${dropwizard.version}</version>
        </dependency>
        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-jdbi</artifactId>
            <version>${dropwizard.version}</version>
        </dependency>
        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-auth</artifactId>
            <version>${dropwizard.version}</version>
        </dependency>
        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-forms</artifactId>
            <version>${dropwizard.version}</version>
        </dependency>
        <dependency>
            <groupId>de.spinscale.dropwizard</groupId>
            <artifactId>dropwizard-jobs-core</artifactId>
            <version>3.0.0</version>
        </dependency>
        <dependency>
            <groupId>com.scottescue</groupId>
            <artifactId>dropwizard-entitymanager</artifactId>
            <version>1.0.0-1</version>
        </dependency>
        <dependency>
            <groupId>com.liveperson</groupId>
            <artifactId>dropwizard-websockets</artifactId>
            <version>1.1.0</version>
        </dependency>
        <dependency>
            <groupId>org.secnod.dropwizard</groupId>
            <artifactId>dropwizard-shiro</artifactId>
            <version>0.2.0</version>
        </dependency>
        <dependency>
            <groupId>com.github.toastshaman</groupId>
            <artifactId>dropwizard-auth-jwt</artifactId>
            <version>1.1.2-0</version>
        </dependency>
        <!--========== xDiamond ==========-->
        <dependency>
            <groupId>io.github.hengyunabc.xdiamond</groupId>
            <artifactId>xdiamond-client</artifactId>
            <version>${xdiamond.version}</version>
        </dependency>
        <!--========== Flyway ==========-->
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
            <version>${flyway.version}</version>
        </dependency>
        <!--========== Swagger ==========-->
        <!--<dependency>-->
            <!--<groupId>io.swagger</groupId>-->
            <!--<artifactId>swagger-annotations</artifactId>-->
            <!--<version>${swagger.version}</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
            <!--<groupId>io.swagger</groupId>-->
            <!--<artifactId>swagger-jaxrs</artifactId>-->
            <!--<version>${swagger.version}</version>-->
        <!--</dependency>-->
        <!--========== 3rd Dropwizard ==========-->
        <dependency>
            <groupId>com.smoketurner</groupId>
            <artifactId>dropwizard-swagger</artifactId>
            <version>1.3.0-1</version>
        </dependency>
        <dependency>
            <groupId>io.dropwizard.modules</groupId>
            <artifactId>dropwizard-flyway</artifactId>
            <version>1.0.0-rc3-2</version>
        </dependency>
        <dependency>
            <groupId>com.loginbox.mybatis</groupId>
            <artifactId>dropwizard-mybatis</artifactId>
            <version>1.2.1</version>
        </dependency>
        <!-- ========== jackson ========== -->
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-jsonSchema</artifactId>
            <version>2.9.3</version>
        </dependency>
        <!-- ========== Database ========== -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.jdbc.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>${mybatis.version}</version>
        </dependency>
        <!-- ========== Commons ========== -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.4</version>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.11</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.7</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-text</artifactId>
            <version>1.2</version>
        </dependency>
        <!--========== Jedis ==========-->
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>2.9.0</version>
        </dependency>
        <dependency>
            <groupId>de.ruedigermoeller</groupId>
            <artifactId>fst</artifactId>
            <version>2.57</version>
        </dependency>
        <!-- ========== Email ========== -->
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>1.4.7</version>
        </dependency>
        <!--========== Guava ==========-->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>21.0</version>
        </dependency>
        <!--========== RSQL ==========-->
        <dependency>
            <groupId>cz.jirutka.rsql</groupId>
            <artifactId>rsql-parser</artifactId>
            <version>2.1.0</version>
        </dependency>
        <dependency>
            <groupId>com.github.tennaito</groupId>
            <artifactId>rsql-jpa</artifactId>
            <version>2.0.2</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>5.1.0.Final</version>
        </dependency>
        <!--========== QueryDsl ==========-->
        <dependency>
            <groupId>com.querydsl</groupId>
            <artifactId>querydsl-apt</artifactId>
            <version>${querydsl.version}</version>
            <!--<scope>provided</scope>-->
        </dependency>
        <dependency>
            <groupId>com.querydsl</groupId>
            <artifactId>querydsl-jpa</artifactId>
            <version>${querydsl.version}</version>
        </dependency>
        <dependency>
            <groupId>com.querydsl</groupId>
            <artifactId>querydsl-sql</artifactId>
            <version>${querydsl.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>joda-time</groupId>
                    <artifactId>joda-time</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <!--=================================================-->
    <!--==================== Plugins ====================-->
    <!--=================================================-->
    <build>
        <plugins>
            <!--========== Plugin: Maven Compiler ===========-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <!--========== Plugin: Maven Jar ===========-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <!--========== Plugin: JPA ===========-->
            <plugin>
                <groupId>com.mysema.maven</groupId>
                <artifactId>apt-maven-plugin</artifactId>
                <version>1.1.3</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/generated-sources/java</outputDirectory>
                            <processor>com.querydsl.apt.jpa.JPAAnnotationProcessor</processor>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--========== Plugin: Source ===========-->
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.0.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--========== Plugin: proguard ===========-->
            <plugin>
                <groupId>com.github.wvengen</groupId>
                <artifactId>proguard-maven-plugin</artifactId>
                <version>2.0.11</version>

                <executions>
                    <execution>
                        <!-- 混淆时刻，这里是打包的时候混淆-->
                        <phase>package</phase>
                        <goals>
                            <!-- 使用插件的什么功能，当然是混淆-->
                            <goal>proguard</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skip>true</skip>
                    <!-- 是否将生成的PG文件安装部署-->
                    <attach>true</attach>
                    <!-- 是否混淆-->
                    <obfuscate>true</obfuscate>
                    <!-- 指定生成文件分类 -->
                    <attachArtifactClassifier>pg</attachArtifactClassifier>
                    <options>
                        <!-- JDK目标版本1.8-->
                        <option>-target 1.8</option>
                        <!-- 不做压缩（删除注释、未被引用代码）-->
                        <option>-dontshrink</option>
                        <!-- 不做优化（变更代码实现逻辑）-->
                        <option>-dontoptimize</option>
                        <!-- 不跳过非公用类文件及成员-->
                        <option>-dontskipnonpubliclibraryclasses</option>
                        <option>-dontskipnonpubliclibraryclassmembers</option>
                        <!-- 优化时允许访问并修改有修饰符的类和类的成员 -->
                        <option>-allowaccessmodification</option>
                        <!-- 使用独特的混淆类的成员名称来增加混淆-->
                        <option>-useuniqueclassmembernames</option>
                        <!-- 不混淆所有包名，本人测试混淆后WEB项目问题实在太多，毕竟Spring配置中有大量固定写法的包名-->
                        <option>-keeppackagenames</option>
                        <!-- 不混淆所有特殊的类-->
                        <option>-keepattributes
                            Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,LocalVariable*Table,*Annotation*,Synthetic,EnclosingMethod
                        </option>
                        <!-- 不混淆所有的set/get方法，毕竟项目中使用的部分第三方框架（例如Shiro）会用到大量的set/get映射-->
                        <option>-keepclassmembers public class * {void set*(***);*** get*();}</option>
                        <!-- 不混淆测试包下的所有类名，且类中的方法也不混淆,但是属性混淆-->
                        <option>-keep class com.jikexueyuancrm.test.** { &lt;methods&gt;; }</option>
                        <!-- 以下因为大部分是Spring管理的Bean，不对包类的类名进行混淆，但对类中的属性和方法混淆-->
                        <option>-keep class cyan.svc.** {*;}</option>
                        <option>-keep class cyan.nazgul.BaseApplication {*;}</option>
                        <option>-keep class cyan.nazgul.BaseConfiguration {*;}</option>
                        <option>-keep class cyan.nazgul.BaseApplication {*;}</option>
                        <option>-keep class cyan.nazgul.BaseConfiguration {*;}</option>
                        <option>-keep class cyan.nazgul.resources.** {*;}</option>
                    </options>
                    <outjar>${project.build.finalName}-pg.jar</outjar>
                    <!-- 添加依赖，这里你可以按你的需要修改，这里测试只需要一个JRE的Runtime包就行了 -->
                    <libs>
                        <lib>${java.home}/lib/rt.jar</lib>
                    </libs>
                    <!-- 对什么东西进行加载，这里仅有classes，毕竟你也不可能对配置文件及JSP混淆吧-->
                    <injar>classes</injar>
                    <!-- 输出目录-->
                    <outputDirectory>${project.build.directory}</outputDirectory>
                </configuration>
            </plugin>

        </plugins>
    </build>
</project>